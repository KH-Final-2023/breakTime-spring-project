<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="decideMapper">
	
		<!-- <select id="selectDecideBasket" resultMap="basketResultSet">
		SELECT R.ROOM_NO    AS ROOM_NO,		 
			   B.BU_NO      AS BU_NO,
			   H.MAIN_IMG   AS HOUSE_MAIN_IMG,
			   IMG.SAVE_NAME AS IMG_SAVE_NAME,
			   IMG.FILE_PATH AS IMG_FILE_PATH,
			   R.ROOM_H_COUNT  AS ROOM_H_COUNT,
			   R.ROOM_PRICE AS ROOM_PRICE,
			   R.ROOM_NAME  AS ROOM_NAME,
			   R.ROOM_INFO  AS ROOM_INFO
		FROM BUSINESS B
        INNER JOIN BU_MAIN_IMG IMG ON B.BU_NO = IMG.BU_NO
        INNER JOIN HOUSE H 	ON B.BU_TITLE = H.BU_TITLE
        INNER JOIN ROOM R ON B.BU_NO = R.BU_NO
        WHERE BU_NO = #{buNo}
	</select> -->
	
	<!-- 메인 조회 -->
  	 <select id="selectDecideMain" resultType="com.kh.breaktime.decide.model.vo.Decide">
  	/*decideMapper.selectDecideMain*/
    	SELECT  B.BU_NO         AS buNo,
				B.BU_TITLE      AS buTitle,
				B.BU_ADDRESS    AS buAddress,
				H.MAIN_IMG      AS mainImg
		FROM BUSINESS B
		INNER JOIN ROOM R 	ON B.BU_NO = R.BU_NO
		INNER JOIN HOUSE H 	ON B.BU_TITLE = H.BU_TITLE
		WHERE H.MAIN_IMG IS NOT NULL AND B.APPROVAL = 'Y' 
		AND B.BU_NO = #{buNo}
		AND ROWNUM = 1
	</select> 
	
	<!-- 메인 리뷰 개수 조회 -->
	<select id="selectReviewCount" resultType="_int">
	/*decideMapper.selectReviewCount*/
		SELECT COUNT(*)
          FROM BUSINESS B
          INNER JOIN ROOM R ON B.BU_NO = R.BU_NO
          INNER JOIN REVIEW V ON V.USING_ROOM = R.ROOM_NO
          WHERE B.BU_NO = #{BU_NO} 
	</select>
	
	<!-- 리뷰 평점 조회 -->
	 <select id="selectReviewScore" resultType="_double">
	/*decideMapper.selectReviewScore*/
		SELECT 	ROUND(AVG(V.STAR_SCORE), 1) AS starScore
				FROM BUSINESS B
				INNER JOIN ROOM R ON B.BU_NO = R.BU_NO
				LEFT JOIN REVIEW V ON V.USING_ROOM = R.ROOM_NO
				WHERE B.APPROVAL = 'Y' 
				AND B.BU_NO = #{buNo}
	</select> 
	
	<!-- 객실 조회 -->
	<select id="selectDecideRoom" resultType="com.kh.breaktime.decide.model.vo.Decide">
	/*decideMapper.selectDecideRoom*/
		SELECT R.ROOM_NO		AS roomNo,		 
			   B.BU_NO			AS buNo,
			   R.ROOM_H_COUNT	AS roomHCount,
			   R.ROOM_PRICE		AS roomPrice,
			   R.ROOM_NAME		AS roomName,
			   R.ROOM_INFO		AS roomInfo,
			   IMG.FILE_PATH	AS filePath,
			   IMG.SAVE_NAME	AS saveName,
			   IMG.FILE_LEVEL	AS fileLevel
		FROM ROOM R
        LEFT JOIN ROOM_IMG IMG ON R.ROOM_NO = IMG.ROOM_NO
        INNER JOIN BUSINESS B 	ON B.BU_NO = R.BU_NO
        WHERE B.BU_NO = #{buNo}
	</select>
	
	<!-- 메인 지도 화면 조회 -->
	<select id="selectDecideMap" resultType="com.kh.breaktime.decide.model.vo.Decide">
	/*decideMapper.selectDecideMap*/
		SELECT 	BU_NO AS buNo, 
				BU_ADDRESS AS buAddress
		FROM BUSINESS
		WHERE BU_NO = #{buNo}
 	</select>
 	
 	<!-- 지도 메인 썸네일 조회 -->
 	 <select id="selectDetailMap" resultType="com.kh.breaktime.decide.model.vo.Decide">
 	/*decideMapper.selectDetailMap*/
		SELECT BU_NO AS buNo,
			   BU_ADDRESS AS buAddress,
			   BU_TITLE AS buTitle
		FROM BUSINESS
		WHERE BU_NO = #{buNo}
 	</select>
 	
 	<!-- 지도 팝업 지도 조회 -->
 	 <select id="selectPopupMap" resultType="com.kh.breaktime.decide.model.vo.Decide">
 	/*decideMapper.selectPopupMap*/
		SELECT BU_ADDRESS AS buAddress,
			   BU_TITLE AS buTitle
		FROM BUSINESS
		WHERE BU_NO = #{buNo}
 	</select>
	
	<!-- 리뷰 조회 -->
	 <select id="selectDecideReview" resultType="com.kh.breaktime.decide.model.vo.Decide">
	/*decideMapper.selectDecideReview*/
		SELECT  R.REVIEW_NO				AS reviewNo,
				R.REVIEW_WRITER			AS reviewWriter, 
				M.USER_NAME				AS userName, 
				TO_CHAR(R.CREATE_DATE, 'YYYY-MM-DD')			AS createDate,
				R.USING_ROOM			AS usingRoom, 
				RO.ROOM_NAME			AS roomName,
				RO.ROOM_INFO			AS roomInfo, 
				R.REVIEW_CONTENT		AS reviewContent, 
				R.REVIEW_CONTENT_REPLY	AS reviewContentReply
		FROM REVIEW R
		JOIN MEMBER M   ON M.USER_NO = R.REVIEW_WRITER
		JOIN ROOM RO    ON RO.ROOM_NO = R.USING_ROOM
        JOIN BUSINESS B ON B.BU_NO = RO.BU_NO
		WHERE R.REVIEW_AVAILABLE = 'Y'
        AND B.BU_NO = #{buNo}
	</select>
	
	<!-- 리뷰 insert -->
	<insert id="insertReview" parameterType="review"> 
	INSERT INTO REVIEW(
	 REVIEW_NO,
	 STAR_SCORE,
	 REVIEW_WRITER,
	 CREATE_DATE,
	 REVIEW_CONTENT
	 ) 
	VALUES( 
	SEQ_RNO.NEXTVAL, 
	#{starScore}, 
	#{reviewWriter},
	#{createDate}, 
	#{reviewContent} 
	) 
	</insert>
	
	
	
	
	
	
	
	
 	
</mapper>